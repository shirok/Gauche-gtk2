#
# Makefile.in for Gauche-gtk/src
#

# prelude ---------------------------------------------

.SUFFIXES: .stub

.stub.c :
	$(GOSH) genstub $<

# General info
SHELL       = @SHELL@
prefix      = @prefix@
exec_prefix = @exec_prefix@
bindir      = @bindir@
libdir      = @libdir@
datadir     = @datadir@
datarootdir = @datarootdir@
srcdir      = @srcdir@
VPATH       = $(srcdir)
top_builddir = @top_builddir@
top_srcdir   = @top_srcdir@

# These may be overridden by make invocators
DESTDIR  =

# These are set by configure
# NB: cc and various flags must match the ones used to compile Gauche,
# so the make invocator shouldn't casually override them.
CC       = @CC@
CFLAGS   = @DEFS@ @CFLAGS@ @X_CFLAGS@ -I. `gauche-config -I` `gauche-config --so-cflags` $(GTK_CFLAGS)
LDFLAGS  = $(GTK_LDFLAGS) @LDFLAGS@  `gauche-config -L` `gauche-config --so-ldflags`
LIBS     = $(GTK_LIBS) @LIBS@ `gauche-config -l` @X_LIBS@ @X_PRE_LIBS@ -lXext -lX11
GOSH     = @GOSH@
GAUCHE_CONFIG = @GAUCHE_CONFIG@
INSTALL  = @GAUCHE_INSTALL@
OBJEXT   = @OBJEXT@
EXEEXT   = @EXEEXT@
SOEXT    = @SOEXT@

# Other definitions

GTK_CFLAGS  = `pkg-config --cflags gtk+-2.0`
GTK_LDFLAGS = `pkg-config --libs-only-L gtk+-2.0`
GTK_LIBS    = `pkg-config --libs-only-l gtk+-2.0`

GEN_OBJS = @GEN_OBJS@
GEN_SRCS = @GEN_SRCS@
GEN_STUBS = @GEN_STUBS@

ARCHFILES = gauche-gtk.$(SOEXT)
SCMFILES =
HEADERS = gauche-gtk.h gtk-lib.h gtk-lib.types

GAUCHE_PKGINCDIR  = $(DESTDIR)@GAUCHE_PKGINCDIR@
GAUCHE_PKGLIBDIR  = $(DESTDIR)@GAUCHE_PKGLIBDIR@
GAUCHE_PKGARCHDIR = $(DESTDIR)@GAUCHE_PKGARCHDIR@

# build -----------------------------------------------

TARGET = gauche-gtk.$(SOEXT)
OBJS = gauche-gtk.$(OBJEXT) \
       gauche-glib.$(OBJEXT) gauche-gdklib.$(OBJEXT) \
       $(GEN_OBJS)
CONFIG_GENERATED = Makefile config.cache config.log config.status \
		   gtk-config.h
GENERATED = $(GEN_SRCS) $(GEN_STUBS) \
	    gtk-lib.h gtk-lib.inits gtk-lib.types gauche-glib.c \
	    gauche-gdklib.c

TESTFILES = test-native$(EXEEXT) test-native.$(OBJEXT)

all : $(TARGET)

gauche-gtk.$(SOEXT) : $(OBJS)
	$(CC) $(LDFLAGS) gauche-gtk.$(SOEXT) $(OBJS) $(LIBS)

$(OBJS) : gauche-gtk.h gtk-lib.h
gauche-gtk.$(OBJEXT) : gtk-lib.inits

stubs : h2s-gtk.scm gdk-lib.hints gtk-lib.hints pango-lib.hints
	$(GOSH) -I../lib ./h2s-gtk.scm

gauche-glib.c : gauche-glib.stub gtk-lib.types
gauche-gdklib.c : gauche-gdklib.stub gtk-lib.types

gtk-lib.h gtk-lib.types gtk-lib.inits:
	@echo "Please run 'make stubs' first."
	@exit 1

# tests -----------------------------------------------

check : all
	@rm -f test.log
	$(GOSH) -I. -I../lib test-gdk.scm >> test.log
	$(GOSH) -I. -I../lib test-gtk.scm >> test.log

test-native$(EXEEXT) : test-native.$(OBJEXT) $(OBJS)
	$(CC) -L. $(GTK_LDFLAGS) `$(GAUCHE_CONFIG) -L` -o test-native test-native.$(OBJEXT) $(OBJS) -luvector -lgauche $(LIBS)

# install ----------------------------------------------

install : all
	$(INSTALL) -m 444 -T $(GAUCHE_PKGINCDIR) $(HEADERS)
	$(INSTALL) -m 444 -T $(GAUCHE_PKGLIBDIR)  $(SCMFILES)
	$(INSTALL) -m 555 -T $(GAUCHE_PKGARCHDIR) $(ARCHFILES)

# clean ------------------------------------------------

clean :
	rm -rf core $(TARGET) $(OBJS) $(TESTFILES) *~ test.log so_locations

distclean : clean
	rm -rf $(CONFIG_GENERATED)

maintainer-clean : clean
	rm -rf $(CONFIG_GENERATED) $(GENERATED) configure
